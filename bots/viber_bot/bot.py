import json
import logging

from os import path
from flask import Flask, request, Response

from viberbot import Api
from viberbot.api.bot_configuration import BotConfiguration
from viberbot.api.viber_requests import ViberConversationStartedRequest
from viberbot.api.viber_requests import ViberFailedRequest
from viberbot.api.viber_requests import ViberMessageRequest
from viberbot.api.viber_requests import ViberSubscribedRequest
from viberbot.api.viber_requests import ViberUnsubscribedRequest

from viberbot.api.messages import (
    TextMessage,
    PictureMessage,
    VideoMessage,
    RichMediaMessage,
)

logging.basicConfig(level=logging.INFO, style="{")
logger = logging.getLogger("viber_bot")
logger.setLevel(logging.DEBUG)
handler = logging.StreamHandler()
formatter = logging.Formatter("%(asctime)s - %(name)s - %(levelname)s - %(message)s")
handler.setFormatter(formatter)
logger.addHandler(handler)

CURRENT_PATH = path.dirname(path.realpath(__file__))

with open(path.join(CURRENT_PATH, ".token")) as token:
    TOKEN = token.read()

viber = Api(
    BotConfiguration(
        name="–ó–ù–û –±–æ—Ç (–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞)",
        avatar="https://visti.rovno.ua/img/650/do-uvahi-rivnenskikh-shkolyariv-rozpochalasya-rees20200108_9177.jpg",
        auth_token=TOKEN,
    )
)

app = Flask(__name__)


@app.route("/set-webhook", methods=["GET"])
def register_webhook():
    viber.set_webhook(request.args["url"])
    logger.info(f"Webhook set to: {request.args['url']}")
    return Response(status=200)


@app.route("/", methods=["POST"])
def incoming():
    logger.debug("received request. post data: {0}".format(request.get_data()))

    # every viber message is signed, you can verify the signature using this method
    if not viber.verify_signature(
        request.get_data(), request.headers.get("X-Viber-Content-Signature")
    ):
        return Response(status=403)

    keyboard = {
        # "BgColor": "#FFFFFF",  # —Ñ–æ–Ω –Ω–∞–≤–∫–æ–ª–æ –∫–Ω–æ–ø–∫–∏
        "Type": "keyboard",
        # "InputFieldState": "hidden",  # –ø—Ä–∏—Ö–æ–≤—É—î –ø–æ–ª–µ –≤–≤–æ–¥—É
        "tracking_data": "general_keyboard",
        "Buttons": [
            {
                "Columns": 4,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "reply",
                # –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó –∫–Ω–æ–ø–∫–∏
                "ActionBody": "get_question",
                # "ReplyType": "message",  # –Ω–µ–≤—ñ–¥–æ–º–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
                # "BgColor": "#e6f5ff",  # —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
                "Text": 'üìö <font color="Red"><b>–ü–ò–¢–ê–ù–ù–Ø</b></font>',
                "TextSize": "large",
                "TextHAlign": "left",
                "TextVAlign": "center",
                "Image": "https://beetroot.academy/wp-content/uploads/BA_Logo_PNG-transparency-1.png",
            },
            {
                "Columns": 1,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "reply",
                # –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —è–∫–µ –±—É–¥–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø—ñ—Å–ª—è –Ω–∞—Ç–∏—Å–Ω–µ–Ω–Ω—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó –∫–Ω–æ–ø–∫–∏
                "ActionBody": "get_help",
                # "ReplyType": "message",  # –Ω–µ–≤—ñ–¥–æ–º–µ –ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è
                # "BgColor": "#e6f5ff",  # —Ñ–æ–Ω –∫–Ω–æ–ø–∫–∏
                "Text": "<b>?</b>",
                "TextOpacity": 60,
            },
            {
                "Columns": 1,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "BgMediaType": "gif",  # picture|gif, default - picture
                "BgMedia": "https://upload.wikimedia.org/wikipedia/commons/2/2c/Rotating_earth_%28large%29.gif",
                "BgLoop": True,  # —Ü–∏–∫–ª—ñ—á–Ω–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–Ω—è gif
                "ActionType": "open-url",  # reply|open-url|location-picker|share-phone|none, default - reply
                "ActionBody": "https://ru.wikipedia.org/wiki/GIF",
                # Possible tags: <b>|<i>|<u>|<br>|<s>|<font size=‚ÄùN‚Äù> N between 12 and 32|<font color=‚Äù#7F00FF‚Äù>, double quotes in JSON should be escaped.
                "Text": '<font color="White">–¢–µ–∫—Å—Ç</font>',
                "TextSize": "large",  # small|regular|large, default - regular
                "TextHAlign": "left",  # top|middle|bottom, default - middle
                "TextVAlign": "center",  # left|center|right, default - center
                "TextPaddings": [12, 12, 12, 12],  # per padding 0..12
                "Image": "https://beetroot.academy/wp-content/uploads/BA_Logo_PNG-transparency-1.png",
            },  # See more: https://viber.github.io/docs/tools/keyboards/
        ],
    }

    question = {
        # "BgColor": "#FFFFFF",  # —Ñ–æ–Ω –Ω–∞–≤–∫–æ–ª–æ –∫–Ω–æ–ø–∫–∏
        "Type": "rich_media",
        # "InputFieldState": "hidden",  # –ø—Ä–∏—Ö–æ–≤—É—î –ø–æ–ª–µ –≤–≤–æ–¥—É
        "tracking_data": "general_keyboard",
        "min_api_version": 4,
        "BgColor": "#FFFFFF",
        "Buttons": [
            {  # Question Text
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 2,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "‚ùì –£—Ä–∏–≤–æ–∫ ¬´–ö–æ–ª–æ —Ö–∞—Ç–∏ –º–∞—Ç–∏-–∑–æ–∑—É–ª—è –∫—É—î –º–µ–Ω—ñ —Ä–æ–∑–ª—É–∫—É. –î–æ–≤–≥–æ-–¥–æ–≤–≥–æ, –Ω–µ –æ–¥–∏–Ω –¥–µ—Å—è—Ç–æ–∫ —Ä–æ–∫—ñ–≤ –±—É–¥–µ –ø—Ä–æ–≤–æ–¥–∂–∞—Ç–∏ –º–µ–Ω–µ –º–∞—Ç–∏, –¥–∏–≤–ª—è—á–∏—Å—å –∫—Ä—ñ–∑—å —Å–ª—å–æ–∑–∏ –∑ –º–æ–ª–∏—Ç–≤–∞–º–∏ –Ω–∞ –∑–æ—Ä—è—Ö –≤–µ—á—ñ—Ä–Ω—ñ—Ö —ñ —Ä–∞–Ω—ñ—à–Ω—ñ—Ö, —â–æ–± –Ω–µ –≤–∑—è–ª–∞ –º–µ–Ω–µ –Ω—ñ –∫—É–ª—è, –Ω—ñ —à–∞–±–ª—è, –Ω—ñ –Ω–∞–∫–ª–µ–ø –ª–∏—Ö–∏–π¬ª —É–∑—è—Ç–∏–π —ñ–∑ —Ç–≤–æ—Ä—É",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Answer Caption
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "üëâ <b>–í–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π:<b>",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Choice 1
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "- <b>–ê</b>: ¬´–¢—Ä–∏ –∑–æ–∑—É–ª—ñ –∑ –ø–æ–∫–ª–æ–Ω–æ–º¬ª –ì—Ä–∏–≥–æ—Ä–∞ –¢—é—Ç—é–Ω–Ω–∏–∫–∞",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Choice 2
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "- <b>–ë</b>: ¬´–ó–∞—á–∞—Ä–æ–≤–∞–Ω–∞ –î–µ—Å–Ω–∞¬ª –û–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –î–æ–≤–∂–µ–Ω–∫–∞",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Choice 3
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "- <b>–í</b>: ¬´–ú–∞—Ä—ñ—è¬ª –£–ª–∞—Å–∞ –°–∞–º—á—É–∫–∞",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Choice 4
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "- <b>–ì</b>: ¬´–¢–∏–≥—Ä–æ–ª–æ–≤–∏¬ª –Ü–≤–∞–Ω–∞ –ë–∞–≥—Ä—è–Ω–æ–≥–æ",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {  # Choice 5
                "Columns": 6,  # —à–∏—Ä–∏–Ω–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 6
                "Rows": 1,  # –≤–∏—Å–æ—Ç–∞ –∫–Ω–æ–ø–∫–∏, –º–∞–∫—Å–∏–º—É–º - 2
                "ActionType": "none",
                "ActionBody": "none",
                "Text": "- <b>–î</b>: ¬´–Ø (–†–æ–º–∞–Ω—Ç–∏–∫–∞)¬ª –ú–∏–∫–æ–ª–∏ –•–≤–∏–ª—å–æ–≤–æ–≥–æ",
                "TextHAlign": "left",
                "TextVAlign": "top",
            },
            {
                "Columns": 1,
                "Rows": 1,
                "ActionType": "reply",
                "ActionBody": "choice_1",
                "BgColor": "#EEEEEE",
                "Text": "<b>–ê</b>",
            },
            {
                "Columns": 1,
                "Rows": 1,
                "ActionType": "reply",
                "ActionBody": "choice_2",
                "BgColor": "#EEEEEE",
                "Text": "<b>–ë</b>",
            },
            {
                "Columns": 1,
                "Rows": 1,
                "ActionType": "reply",
                "ActionBody": "choice_3",
                "BgColor": "#EEEEEE",
                "Text": "<b>–í</b>",
            },
            {
                "Columns": 1,
                "Rows": 1,
                "ActionType": "reply",
                "ActionBody": "choice_4",
                "BgColor": "#EEEEEE",
                "Text": "<b>–ì</b>",
            },
            {
                "Columns": 1,
                "Rows": 1,
                "ActionType": "reply",
                "ActionBody": "choice_5",
                "BgColor": "#EEEEEE",
                "Text": "<b>–î</b>",
            },
        ],
    }

    # q1 = {
    #     "receiver": "nsId6t9MWy3mq09RAeXiug==",
    #     "type": "rich_media",
    #     "min_api_version": 2,
    #     "rich_media": {
    #         "Type": "rich_media",
    #         "ButtonsGroupColumns": 6,
    #         "ButtonsGroupRows": 7,
    #         "BgColor": "#FFFFFF",
    #         "Buttons": [
    #             {
    #                 "Columns": 6,
    #                 "Rows": 3,
    #                 "ActionType": "open-url",
    #                 "ActionBody": "https://www.google.com",
    #                 "Image": "http://html-test:8080/myweb/guy/assets/imageRMsmall2.png"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 2,
    #                 "Text": "<font color=#323232><b>Headphones with Microphone, On-ear Wired earphones</b></font><font color=#777777><br>Sound Intone </font><font color=#6fc133>$17.99</font>",
    #                 "ActionType": "open-url",
    #                 "ActionBody": "https://www.google.com",
    #                 "TextSize": "medium",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "left"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 1,
    #                 "ActionType": "reply",
    #                 "ActionBody": "https://www.google.com",
    #                 "Text": "<font color=#ffffff>Buy</font>",
    #                 "TextSize": "large",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "middle",
    #                 "Image": "https://s14.postimg.org/4mmt4rw1t/Button.png"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 1,
    #                 "ActionType": "reply",
    #                 "ActionBody": "https://www.google.com",
    #                 "Text": "<font color=#8367db>MORE DETAILS</font>",
    #                 "TextSize": "small",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "middle"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 3,
    #                 "ActionType": "open-url",
    #                 "ActionBody": "https://www.google.com",
    #                 "Image": "https://s16.postimg.org/wi8jx20wl/image_RMsmall2.png"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 2,
    #                 "Text": "<font color=#323232><b>Hanes Men's Humor Graphic T-Shirt</b></font><font color=#777777><br>Hanes</font><font color=#6fc133>$10.99</font>",
    #                 "ActionType": "open-url",
    #                 "ActionBody": "https://www.google.com",
    #                 "TextSize": "medium",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "left"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 1,
    #                 "ActionType": "reply",
    #                 "ActionBody": "https://www.google.com",
    #                 "Text": "<font color=#ffffff>Buy</font>",
    #                 "TextSize": "large",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "middle",
    #                 "Image": "https://s14.postimg.org/4mmt4rw1t/Button.png"
    #             },
    #             {
    #                 "Columns": 6,
    #                 "Rows": 1,
    #                 "ActionType": "reply",
    #                 "ActionBody": "https://www.google.com",
    #                 "Text": "<font color=#8367db>MORE DETAILS</font>",
    #                 "TextSize": "small",
    #                 "TextVAlign": "middle",
    #                 "TextHAlign": "middle"
    #             }
    #         ]
    #     }
    # }

    viber_request = viber.parse_request(request.get_data().decode("utf8"))

    if isinstance(viber_request, ViberMessageRequest):
        message = viber_request.message
        text = message.text
        text_message = ""

        if text == "get_question":
            text_message = "–ù–æ–≤–µ –∑–∞–ø–∏—Ç–∞–Ω–Ω—è"
        elif text == "get_help":
            text_message = "–í–∞–º –¥–æ–ø–æ–º–æ–∂—É—Ç—å"
        else:
            text_message = text

        viber.send_messages(
            viber_request.sender.id,
            [
                RichMediaMessage(
                    rich_media=question, alt_text="SAMPLE_ALT_TEXT", min_api_version=4,
                ),
                TextMessage(text=text_message, keyboard=keyboard, min_api_version=4,),
            ],
        )
    elif (
        isinstance(viber_request, ViberConversationStartedRequest)
        or isinstance(viber_request, ViberSubscribedRequest)
        or isinstance(viber_request, ViberUnsubscribedRequest)
    ):
        viber.send_messages(
            viber_request.sender.id,
            [TextMessage(None, None, viber_request.get_event_type())],
        )
    elif isinstance(viber_request, ViberFailedRequest):
        logger.warn(
            "client failed receiving message. failure: {0}".format(viber_request)
        )

    return Response(status=200)


def main():
    app.run(host="0.0.0.0", port=8443, debug=True)


# http://0.0.0.0:8443/set-webhook?url=https://___.ngrok.io/

if __name__ == "__main__":
    main()
